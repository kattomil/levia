"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var url_1 = require("./url");
var jikanApi_1 = require("./jikanApi");
var axios_1 = require("axios");
var Top = /** @class */ (function () {
    function Top() {
        this.baseUrl = jikanApi_1.default + "/top";
    }
    Top.prototype.jikanGet = function (url) {
        return axios_1.default.get(url);
    };
    Top.prototype.anime = function () {
        return new TopAnime(this);
    };
    Top.prototype.manga = function () {
        return new TopManga(this);
    };
    Top.prototype.people = function () {
        return new TopSimple(this, "people");
    };
    Top.prototype.characters = function () {
        return new TopSimple(this, "characters");
    };
    return Top;
}());
// Class For "people" And "characters"
var TopSimple = /** @class */ (function () {
    function TopSimple(parent, type) {
        this.parent = parent;
        this.type = type;
    }
    TopSimple.prototype.topGet = function (p, subType) {
        var params = [this.type];
        if (p != null)
            params[1] = String(p);
        else
            params[1] = "1";
        params[2] = subType;
        // @ts-ignore
        var url = url_1.joinUrl(this.parent.baseUrl, params);
        // @ts-ignore
        return this.parent.jikanGet(url);
    };
    TopSimple.prototype.all = function (p) {
        return this.topGet(p, "");
    };
    return TopSimple;
}());
var TopAnime = /** @class */ (function () {
    function TopAnime(parent) {
        this.parent = parent;
    }
    TopAnime.prototype.topGet = function (p, subType) {
        var params = ["anime"];
        if (p != null)
            params[1] = String(p);
        else
            params[1] = "1";
        params[2] = subType;
        // @ts-ignore
        var url = url_1.joinUrl(this.parent.baseUrl, params);
        // @ts-ignore
        return this.parent.jikanGet(url);
    };
    TopAnime.prototype.all = function (p) {
        return this.topGet(p, "");
    };
    TopAnime.prototype.airing = function (p) {
        return this.topGet(p, "airing");
    };
    TopAnime.prototype.upcoming = function (p) {
        return this.topGet(p, "upcoming");
    };
    TopAnime.prototype.tv = function (p) {
        return this.topGet(p, "tv");
    };
    TopAnime.prototype.movie = function (p) {
        return this.topGet(p, "movie");
    };
    TopAnime.prototype.ova = function (p) {
        return this.topGet(p, "ova");
    };
    TopAnime.prototype.special = function (p) {
        return this.topGet(p, "special");
    };
    TopAnime.prototype.byPopularity = function (p) {
        return this.topGet(p, "bypopularity");
    };
    TopAnime.prototype.favorite = function (p) {
        return this.topGet(p, "favorite");
    };
    return TopAnime;
}());
var TopManga = /** @class */ (function () {
    function TopManga(parent) {
        this.parent = parent;
    }
    TopManga.prototype.topGet = function (p, subType) {
        var params = ["manga"];
        if (p != null)
            params[1] = String(p);
        else
            params[1] = "1";
        params[2] = subType;
        // @ts-ignore
        var url = url_1.joinUrl(this.parent.baseUrl, params);
        // @ts-ignore
        return this.parent.jikanGet(url);
    };
    TopManga.prototype.all = function (p) {
        return this.topGet(p, "");
    };
    TopManga.prototype.manga = function (p) {
        return this.topGet(p, "manga");
    };
    TopManga.prototype.novels = function (p) {
        return this.topGet(p, "novels");
    };
    TopManga.prototype.oneshots = function (p) {
        return this.topGet(p, "oneshots");
    };
    TopManga.prototype.doujin = function (p) {
        return this.topGet(p, "doujin");
    };
    TopManga.prototype.manhwa = function (p) {
        return this.topGet(p, "manhwa");
    };
    TopManga.prototype.manhua = function (p) {
        return this.topGet(p, "manhua");
    };
    TopManga.prototype.byPopularity = function (p) {
        return this.topGet(p, "bypopularity");
    };
    TopManga.prototype.favorite = function (p) {
        return this.topGet(p, "favorite");
    };
    return TopManga;
}());
function default_1() {
    return new Top();
}
exports.default = default_1;

//# sourceMappingURL=top.js.map
