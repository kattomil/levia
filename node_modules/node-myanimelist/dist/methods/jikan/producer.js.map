{"version":3,"sources":["../src/methods/jikan/producer.ts"],"names":[],"mappings":";;AAAA,6BAAgC;AAChC,uCAAiC;AAEjC,+BAA0B;AAE1B;IAEE;QACE,IAAI,CAAC,OAAO,GAAM,kBAAO,cAAW,CAAC;IACvC,CAAC;IACO,2BAAQ,GAAhB,UAAiB,GAAW;QAC1B,OAAO,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,uBAAI,GAAJ,UAAK,EAAU,EAAE,CAAU;QACzB,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,IAAI;YAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC;IACH,eAAC;AAAD,CAbA,AAaC,IAAA;AAED,SAAS,QAAQ,CAAC,EAAU,EAAE,CAAU;IACtC,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;QACxB,OAAO,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC;AAED,QAAQ,CAAC,KAAK,GAAG,UAAC,EAAU,EAAE,CAAU;IACtC,IAAI,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAC;IACvB,0CAA0C;IAC1C,aAAa;IACb,CAAC,CAAC,QAAQ,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC;IACpB,aAAa;IACb,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC;AAEF,kBAAe,QAAQ,CAAC","file":"producer.js","sourcesContent":["import { joinUrl } from \"./url\";\nimport baseUrl from \"./jikanApi\";\n\nimport axios from \"axios\";\n\nclass Producer {\n  private baseUrl: string;\n  constructor() {\n    this.baseUrl = `${baseUrl}/producer`;\n  }\n  private jikanGet(url: string) {\n    return axios.get(url);\n  }\n  info(id: number, p?: number) {\n    let params = [String(id)];\n    if (p != null) params[1] = String(p);\n    return this.jikanGet(joinUrl(this.baseUrl, params));\n  }\n}\n\nfunction producer(id: number, p?: number): Promise<any> {\n  return new Promise(resolve => {\n    resolve(new Producer().info(id, p));\n  });\n}\n\nproducer.debug = (id: number, p?: number): string => {\n  let s = new Producer();\n  // Return url instead of calling jikan api\n  // @ts-ignore\n  s.jikanGet = s => s;\n  // @ts-ignore\n  return s.info(id, p);\n};\n\nexport default producer;\n"],"sourceRoot":"../../../src"}