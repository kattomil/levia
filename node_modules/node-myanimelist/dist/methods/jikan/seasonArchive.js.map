{"version":3,"sources":["../src/methods/jikan/seasonArchive.ts"],"names":[],"mappings":";;AACA,uCAAiC;AAEjC,+BAA0B;AAE1B;IAEE;QACE,IAAI,CAAC,OAAO,GAAM,kBAAO,oBAAiB,CAAC;IAC7C,CAAC;IACO,gCAAQ,GAAhB,UAAiB,GAAW;QAC1B,OAAO,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,4BAAI,GAAJ;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IACH,oBAAC;AAAD,CAXA,AAWC,IAAA;AAED,SAAS,aAAa;IACpB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;QACxB,OAAO,CAAC,IAAI,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC;AAED,aAAa,CAAC,KAAK,GAAG;IACpB,IAAI,CAAC,GAAG,IAAI,aAAa,EAAE,CAAC;IAC5B,0CAA0C;IAC1C,aAAa;IACb,CAAC,CAAC,QAAQ,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC;IACpB,aAAa;IACb,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","file":"seasonArchive.js","sourcesContent":["import { joinUrl } from \"./url\";\nimport baseUrl from \"./jikanApi\";\n\nimport axios from \"axios\";\n\nclass SeasonArchive {\n  private baseUrl: string;\n  constructor() {\n    this.baseUrl = `${baseUrl}/season/archive`;\n  }\n  private jikanGet(url: string) {\n    return axios.get(url);\n  }\n  info() {\n    return this.jikanGet(this.baseUrl);\n  }\n}\n\nfunction seasonArchive(): Promise<any> {\n  return new Promise(resolve => {\n    resolve(new SeasonArchive().info());\n  });\n}\n\nseasonArchive.debug = (): string => {\n  let s = new SeasonArchive();\n  // Return url instead of calling jikan api\n  // @ts-ignore\n  s.jikanGet = s => s;\n  // @ts-ignore\n  return s.info();\n};\n\nexport default seasonArchive;\n"],"sourceRoot":"../../../src"}