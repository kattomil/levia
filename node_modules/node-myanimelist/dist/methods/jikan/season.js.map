{"version":3,"sources":["../src/methods/jikan/season.ts"],"names":[],"mappings":";;AAAA,6BAAgC;AAChC,uCAAiC;AAEjC,+BAA0B;AAE1B;IAEE;QACE,IAAI,CAAC,OAAO,GAAM,kBAAO,YAAS,CAAC;IACrC,CAAC;IACO,yBAAQ,GAAhB,UAAiB,GAAW;QAC1B,OAAO,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,qBAAI,GAAJ,UAAK,IAAY,EAAE,MAAc;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IACH,aAAC;AAAD,CAXA,AAWC,IAAA;AAID,SAAS,MAAM,CAAC,IAAY,EAAE,MAAc;IAC1C,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;QACxB,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,GAAG,UAAC,IAAY,EAAE,MAAc;IAC1C,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACrB,0CAA0C;IAC1C,aAAa;IACb,CAAC,CAAC,QAAQ,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC;IACpB,aAAa;IACb,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","file":"season.js","sourcesContent":["import { joinUrl } from \"./url\";\nimport baseUrl from \"./jikanApi\";\n\nimport axios from \"axios\";\n\nclass Season {\n  private baseUrl: string;\n  constructor() {\n    this.baseUrl = `${baseUrl}/season`;\n  }\n  private jikanGet(url: string) {\n    return axios.get(url);\n  }\n  info(year: number, season: season) {\n    return this.jikanGet(joinUrl(this.baseUrl, [String(year), String(season)]));\n  }\n}\n\ntype season = \"summer\" | \"spring\" | \"fall\" | \"winter\";\n\nfunction season(year: number, season: season): Promise<any> {\n  return new Promise(resolve => {\n    resolve(new Season().info(year, season));\n  });\n}\n\nseason.debug = (year: number, season: season): string => {\n  let s = new Season();\n  // Return url instead of calling jikan api\n  // @ts-ignore\n  s.jikanGet = s => s;\n  // @ts-ignore\n  return s.info(year, season);\n};\n\nexport default season;\n"],"sourceRoot":"../../../src"}