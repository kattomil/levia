{"version":3,"sources":["../src/methods/jikan/top.ts"],"names":[],"mappings":"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","file":"top.js","sourcesContent":["import { joinUrl } from \"./url\";\nimport baseUrl from \"./jikanApi\";\n\nimport axios from \"axios\";\n\nclass Top {\n  private baseUrl: string;\n  constructor() {\n    this.baseUrl = `${baseUrl}/top`;\n  }\n  private jikanGet(url: string) {\n    return axios.get(url);\n  }\n  anime(): TopAnime {\n    return new TopAnime(this);\n  }\n  manga(): TopManga {\n    return new TopManga(this);\n  }\n  people(): TopSimple {\n    return new TopSimple(this, \"people\");\n  }\n  characters(): TopSimple {\n    return new TopSimple(this, \"characters\");\n  }\n}\n\n// Class For \"people\" And \"characters\"\nclass TopSimple {\n  private parent: Top;\n  private type: string;\n  constructor(parent: Top, type: string) {\n    this.parent = parent;\n    this.type = type;\n  }\n  private topGet(p: number, subType: string) {\n    let params: string[] = [this.type];\n    if (p != null) params[1] = String(p);\n    else params[1] = \"1\";\n    params[2] = subType;\n\n    // @ts-ignore\n    const url = joinUrl(this.parent.baseUrl, params);\n    // @ts-ignore\n    return this.parent.jikanGet(url);\n  }\n  all(p?: number) {\n    return this.topGet(p, \"\");\n  }\n}\n\nclass TopAnime {\n  private parent: Top;\n  constructor(parent: Top) {\n    this.parent = parent;\n  }\n  private topGet(p: number, subType: string) {\n    let params: string[] = [\"anime\"];\n    if (p != null) params[1] = String(p);\n    else params[1] = \"1\";\n    params[2] = subType;\n\n    // @ts-ignore\n    const url = joinUrl(this.parent.baseUrl, params);\n    // @ts-ignore\n    return this.parent.jikanGet(url);\n  }\n  all(p?: number) {\n    return this.topGet(p, \"\");\n  }\n  airing(p?: number) {\n    return this.topGet(p, \"airing\");\n  }\n  upcoming(p?: number) {\n    return this.topGet(p, \"upcoming\");\n  }\n  tv(p?: number) {\n    return this.topGet(p, \"tv\");\n  }\n  movie(p?: number) {\n    return this.topGet(p, \"movie\");\n  }\n  ova(p?: number) {\n    return this.topGet(p, \"ova\");\n  }\n  special(p?: number) {\n    return this.topGet(p, \"special\");\n  }\n  byPopularity(p?: number) {\n    return this.topGet(p, \"bypopularity\");\n  }\n  favorite(p?: number) {\n    return this.topGet(p, \"favorite\");\n  }\n}\n\nclass TopManga {\n  private parent: Top;\n  constructor(parent: Top) {\n    this.parent = parent;\n  }\n  private topGet(p: number, subType: string) {\n    let params: string[] = [\"manga\"];\n    if (p != null) params[1] = String(p);\n    else params[1] = \"1\";\n    params[2] = subType;\n\n    // @ts-ignore\n    const url = joinUrl(this.parent.baseUrl, params);\n    // @ts-ignore\n    return this.parent.jikanGet(url);\n  }\n  all(p?: number) {\n    return this.topGet(p, \"\");\n  }\n  manga(p?: number) {\n    return this.topGet(p, \"manga\");\n  }\n  novels(p?: number) {\n    return this.topGet(p, \"novels\");\n  }\n  oneshots(p?: number) {\n    return this.topGet(p, \"oneshots\");\n  }\n  doujin(p?: number) {\n    return this.topGet(p, \"doujin\");\n  }\n  manhwa(p?: number) {\n    return this.topGet(p, \"manhwa\");\n  }\n  manhua(p?: number) {\n    return this.topGet(p, \"manhua\");\n  }\n  byPopularity(p?: number) {\n    return this.topGet(p, \"bypopularity\");\n  }\n  favorite(p?: number) {\n    return this.topGet(p, \"favorite\");\n  }\n}\n\nexport default function(): Top {\n  return new Top();\n}\n"],"sourceRoot":"../../../src"}