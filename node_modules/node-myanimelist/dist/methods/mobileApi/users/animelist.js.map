{"version":3,"sources":["../src/methods/mobileApi/users/animelist.ts"],"names":[],"mappings":";;AAAA,kCAAoC;AACpC,+BAAkD;AAClD,4CAAwC;AAuBxC;;;;;GAKG;AACH,mBACE,IAAS,EACT,IAA4B,EAC5B,MAAqB;IADrB,qBAAA,EAAA,YAA4B;IAC5B,uBAAA,EAAA,WAAqB;IAErB,IAAM,OAAO,GAAuB;QAClC,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,OAAO,CACV,oBAAO,EACP,OAAO,EACP,IAAI,EACJ,WAAW,EACX,aAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAG,CAC9B;QACD,OAAO,EAAE,EAAE,aAAa,EAAE,YAAU,IAAI,CAAC,cAAc,CAAG,EAAE;KAC7D,CAAC;IAEF,OAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;QAC1B,eAAK,CAAC,OAAO,CAAC;aACX,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAX,CAAW,CAAC;aACtB,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,CAAC,EAAR,CAAQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AAtBD,4BAsBC","file":"animelist.js","sourcesContent":["import * as urljoin from \"url-join\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport { baseURL } from \"../mobileApis\";\n\ntype fields =\n  | \"alternative_titles\"\n  | \"media_type\"\n  | \"num_episodes\"\n  | \"status\"\n  | \"start_date\"\n  | \"end_date\"\n  | \"average_episode_duration\"\n  | \"synopsis\"\n  | \"mean\"\n  | \"rank\"\n  | \"popularity\"\n  | \"num_list_users\"\n  | \"num_favorites\"\n  | \"num_scoring_users\"\n  | \"start_season\"\n  | \"broadcast\"\n  | \"nsfw\"\n  | \"created_at\"\n  | \"updated_at\"\n  | \"my_list_status{start_date,finish_date}\";\n/**\n * ### Animelist of any user\n * @param auth Auth OBJ.\n * @param user Mal username or 'me' param. @me to get logged in user\n * @param fields array [alternative_titles,media_type,num_episodes,status,start_date,end_date,average_episode_duration,synopsis,mean,rank,popularity,num_list_users,num_favorites,num_scoring_users,start_season,broadcast,my_list_status{start_date,finish_date},nsfw,created_at,updated_at]\n */\nexport default function(\n  auth: any,\n  user: \"@me\" | string = \"@me\",\n  fields: fields[] = []\n) {\n  const request: AxiosRequestConfig = {\n    method: \"get\",\n    url: urljoin(\n      baseURL,\n      \"users\",\n      user,\n      \"animelist\",\n      `?fields=${fields.join(\",\")}`\n    ),\n    headers: { Authorization: `Bearer ${auth[\"access_token\"]}` }\n  };\n\n  return new Promise((res, rej) => {\n    axios(request)\n      .then(r => res(r.data))\n      .catch(err => rej(err));\n  });\n}\n"],"sourceRoot":"../../../../src"}