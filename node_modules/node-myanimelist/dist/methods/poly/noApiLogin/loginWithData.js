"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = require("axios");
// const qs = require("querystring");
var qs = function (obj) {
    return Object.keys(obj)
        .map(function (key) { return encodeURIComponent(key) + "=" + encodeURIComponent(obj[key]); })
        .join("&");
};
module.exports = function (login, password, startData) {
    var options = {
        method: "post",
        url: "https://myanimelist.net/login.php",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded",
            "Cache-Control": "no-cache",
            cookie: "MALSESSIONID=" + startData.MALSESSIONID + "; MALHLOGSESSID=" + startData.MALHLOGSESSID + "; is_logged_in=1; m_gdpr_mdl=1"
        },
        data: qs({
            user_name: login,
            password: password,
            cookie: "1",
            submit: "1",
            csrf_token: startData.csrf_token
        }),
        maxRedirects: 0,
        validateStatus: function (status) {
            return (status >= 200 && status < 300) || status == 302;
        }
    };
    var parseResponse = function (res) {
        var cookies = res.headers["set-cookie"];
        cookies = cookies.map(function (cookie) { return cookie.split(";")[0]; });
        cookies = cookies.map(function (cookie) {
            cookie = cookie.split("=");
            return { name: cookie[0], value: cookie[1] };
        });
        var MALSESSIONID = cookies.find(function (cookie) { return cookie.name == "MALSESSIONID"; })
            .value;
        var out = {
            MALSESSIONID: MALSESSIONID,
            csrf_token: startData.csrf_token
        };
        return out;
    };
    return new Promise(function (EndRes, rej) {
        axios_1.default(options)
            .then(function (res) {
            EndRes(parseResponse(res));
        })
            .catch(function (err) { return rej("Can Not Login!: " + err); });
    });
};

//# sourceMappingURL=loginWithData.js.map
